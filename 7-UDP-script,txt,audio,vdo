Write a program using UDP Sockets to enable file transfer (Script, Text, Audio and Video one file each) between two machines.
Code
# CN7_client.py

import socket
import os
# Server details
SERVER_IP = "127.0.0.1"   # Change to server machine IP
SERVER_PORT = 5001
BUFFER_SIZE = 4096

# Create UDP socket
client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

# Files to send
files = [
    "files_to_send/script.py",
    "files_to_send/notes.txt",
    "files_to_send/audio.mp3",
    "files_to_send/video.mp4"
]

for filepath in files:
    filename = os.path.basename(filepath)

    # Send filename first
    client_socket.sendto(filename.encode(), (SERVER_IP, SERVER_PORT))

    # Send file content
    with open(filepath, "rb") as f:
        while True:
            bytes_read = f.read(BUFFER_SIZE)
            if not bytes_read:
                break
            client_socket.sendto(bytes_read, (SERVER_IP, SERVER_PORT))

    # Send end-of-file marker
    client_socket.sendto(b"EOF", (SERVER_IP, SERVER_PORT))

    print(f"File {filename} sent successfully!\n")


# CN7_server.py
import socket
import os

# Server settings
SERVER_IP = "0.0.0.0"
SERVER_PORT = 5001
BUFFER_SIZE = 4096
SAVE_DIR = "received_files"

os.makedirs(SAVE_DIR, exist_ok=True)

# Create UDP socket
server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
server_socket.bind((SERVER_IP, SERVER_PORT))

print(f"UDP Server listening on {SERVER_IP}:{SERVER_PORT}...")

while True:
    # Receive file name
    filename, client_addr = server_socket.recvfrom(BUFFER_SIZE)
    filename = filename.decode()
    print(f"Receiving file: {filename} from {client_addr}")

    # Open file for writing
    with open(os.path.join(SAVE_DIR, filename), "wb") as f:
        while True:
            data, addr = server_socket.recvfrom(BUFFER_SIZE)
            if data == b"EOF":
                break
            f.write(data)

    print(f"File {filename} received successfully!\n")
